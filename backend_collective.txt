//Fundamentals of Javascript
//arrays and objects
//fucntions return
//async js coding
//foreach map filter find indexof
//objects

let arr = [1,2,3];
arr.forEach(function(val){
    console.log(val);
})

let newarr = arr.map(function(val){
    return val;
})
console.log(newarr);

arr.filter(function(val){
    if(val > 1) return true;
})

arr.find(function(val){
    if(val == 1) return true;
})

console.log(arr.indexof(3))

var obj = {
    name: "abc",
    age: 20
}
console.log(obj.name)
Object.freeze(obj);

async function abcd(){
    var blob = await fetch(``);
    var ans = await blob.json();
    console.log(ans.results)
}
----------------------------------------
//node.js basics  -> Javascript runtime environment
//working with modules
//file system operations
//understanding http module

const fs = require('fs');

http & https - hyper text transfer protocol (secure)
const http = require('http');
const server = http.createServer(function(req,res){
    res.end("hello world");
})
server.listen(3000);
-------------------------------------
//npm understanding
//understanding node_modules
//dependencies  -- packages and dependencies
//dev dependencies  --  only used in development not after completion
//scripts - understanding default scripts PATH and custom scripts

-------------------------------------
//express.js framework
//setting up basic application
//routing
//middlewares
//request and response handling
//error handling

const express = require('express');
const app = express();
app.get("/", function(req, res){
    res.send("hello world");
})
app.get("/profile", function(req, res){
    res.send("yess world")
})
app.listen(3000);

npm i nodemon -get
nodemon script.js(file name) or npm nodemon scriptjs(file name)

const express = require("express");
const app = express();
app.use(function(req, res, next){
    console.log('middleware running');
    next();
})
app.get("/profile", function(req, res){
    res.send("yess world")
})
app.listen(3000);

app.use((err,req,res.next) => {
    console.log(err.stack);
    res.status(500).send("Something went wrong")
})
----------------------------------
//form handling, sessions and cookies
npm i cookie-parser

app.use(express.json());
app.use(express.urlencoded({ extended: true}));
----------------------------------
//ejs, dynamic routing, initializing projects
small project - notepad, to use above knowledge
----------------------------------
//Data Storage
//types of dbs - SQL | NoSQL 
//NoSQL - mongoDB
//terminologies - collections, documents, schemas, keys, models

BACKEND - application server | database server
database -> collection -> documents
mongoose.connect -> database create
model create -> collection
CREATE -> document
------------------------------------
const mongoose = require('mongoose');
mongoose.connect(`mongodb://127.0.0.1:27017/mongopractice`);
const userSchema = mongoose.Schema({
    name: String,
    username: String,
    email: String
})
module.exports = mongoose.model("user", userSchema);